// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  DELIVERED
  CANCELLED
}

model Order {
  id          String @id @default(uuid())
  totalAmount Float
  totalItems  Int

  status OrderStatus @default(PENDING)
  paid   Boolean     @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  OrderItem OrderItem[]
  payment   OrderPayment?
}

model OrderItem {
  id        String @id @default(uuid())
  productId Int
  quantity  Int
  price     Float

  Order   Order?  @relation(fields: [orderId], references: [id])
  orderId String?
}

model OrderReceipt {
  id String @id @default(uuid())

  payment   OrderPayment? @relation(fields: [paymentId], references: [id])
  paymentId String        @unique

  receiptUrl String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model OrderPayment {
  id String @id @default(uuid())

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @unique

  stripeChargeId String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  receipt        OrderReceipt?
}
